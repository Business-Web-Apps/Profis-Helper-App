version: "3"
services:

###############################
#   Setup user-UI container   #
###############################
  user-ui:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:  
      context: ./user-ui
      dockerfile: Dockerfile.dev
      args:
        NPM_LOG_LEVEL: silent
    container_name: user-ui
    volumes:
      - /app/node_modules
      - ./user-ui:/app
    ports:
      - ${USER_UI_PORT}:3002
    depends_on:
      - server
    networks:
      - frontend
###############################
#   Setup admin-UI container  #
###############################
  admin-ui:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      context: ./admin-ui
      dockerfile: Dockerfile.dev
      args:
        NPM_LOG_LEVEL: silent
    container_name: admin-ui
    volumes:
      - /app/node_modules
      - ./admin-ui:/app
    ports:
      - ${ADMIN_UI_PORT}:3001
    depends_on:
      - server
    networks:
      - frontend
###############################
#   Setup server container    #
###############################
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
      args:
        NPM_LOG_LEVEL: silent
    container_name: server
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/prisma
    ports:
      - ${SERVER_PORT}:3000
    environment:
      POSTGRESQL_URL: "postgres://${POSTGRESQL_USER}:${POSTGRESQL_PASSWORD}@db:${POSTGRESQL_PORT}"
      BCRYPT_SALT: "${BCRYPT_SALT}"
      JWT_SECRET_KEY: "${JWT_SECRET_KEY}"
      JWT_EXPIRATION: "${JWT_EXPIRATION}"
    depends_on:
      - migration
      - db
    links:
      - db
    networks:
      - frontend
      - backend
###############################
#   Setup migration service   #
###############################
  migration:
    build:
      context: ./server
      dockerfile: Dockerfile.prisma.migration
      args:
        NPM_LOG_LEVEL: notice
    container_name: migration
    volumes:
      - /app/node_modules
      - /app/prisma
    environment:
      POSTGRESQL_URL: "postgres://${POSTGRESQL_USER}:${POSTGRESQL_PASSWORD}@db:${POSTGRESQL_PORT}"
      BCRYPT_SALT: "${BCRYPT_SALT}"
    depends_on:
      - db
    links:
      - db
    networks:
      - backend
###############################
#     Setup db container      #
###############################
  db:
    image: postgres:12
    container_name: db
    # ports:
    #   - "${POSTGRESQL_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  postgres: ~

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge