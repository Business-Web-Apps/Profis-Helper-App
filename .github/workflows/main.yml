name: ProfisHelper CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:

  Deploy-db:
    name: Deploy Postgres DB service to DockerHub
    runs-on: ubuntu-latest
    # Docker Hub image that `postgres-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      db:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        volumes:
          - postgres:/var/lib/postgresql/data
    steps:
      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install --yes postgresql-client
      # queries database with postgres client
      - name: Query database as Test
        run: psql -h postgres -d ${{ secrets.POSTGRES_DB }} -U ${{ secrets.POSTGRES_USER }} -c 'SELECT 1;'
        env:
          # postgress password is required; alternatively, you can run:
          # `PGPASSWORD=postgres_password psql ...`
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/profis-helper:db

  # Build-server: 
  #   name: Build and Test Server Backend (CI)
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: server
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '16.x'
  #         cache: 'npm'
  #         cache-dependency-path: server/package-lock.json
  #     - run: npm ci
  #     - run: npm run prisma:generate
  #     - run: npm run build --if-present
  #     - run: npm test

  # Build-user-ui: 
  #   name: Build and Test User-UI (CI)
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: user-ui
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '16.x'
  #         cache: 'npm'
  #         cache-dependency-path: user-ui/package-lock.json
  #     - run: npm ci
  #     - run: npm run build --if-present
  #     - run: npm test
 
  # Build-admin-ui: 
  #   name: Build and Test Admin-UI (CI)
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: admin-ui
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '16.x'
  #         cache: 'npm'
  #         cache-dependency-path: user-ui/package-lock.json
  #     - run: npm ci
  #     - run: npm run build --if-present
  #     - run: npm test

  # Deploy-migration:
  #   name: Deploy migration container service to DockerHub
  #   runs-on: ubuntu-latest

  #   steps:
  #     -
  #       name: Checkout 
  #       uses: actions/checkout@v2
  #     -
  #       name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./server
  #         file: ./server/Dockerfile.prisma.migration
  #         push: true
  #         build-args: |
  #           POSTGRESQL_URL=${{ secrets.POSTGRESQL_URL }}
  #           BCRYPT_SALT=${{ secrets.BCRYPT_SALT }}
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/profis-helper:migration


  # Deploy-server:
  #   name: Deploy server container service to DockerHub
  #   runs-on: ubuntu-latest

  #   steps:
  #     -
  #       name: Checkout 
  #       uses: actions/checkout@v2
  #     -
  #       name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./server
  #         file: ./server/Dockerfile.dev
  #         push: true
  #         build-args: |
  #           POSTGRESQL_URL=${{ secrets.POSTGRESQL_URL }}
  #           BCRYPT_SALT=${{ secrets.BCRYPT_SALT }}
  #           JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
  #           JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/profis-helper:server

  # Deploy-user-ui:
  #   name: Deploy server container service to DockerHub
  #   runs-on: ubuntu-latest

  #   steps:
  #     -
  #       name: Checkout 
  #       uses: actions/checkout@v2
  #     -
  #       name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./user-ui
  #         file: ./user-ui/Dockerfile.dev
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/profis-helper:user-ui